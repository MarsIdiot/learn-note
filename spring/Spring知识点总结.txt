*****Spring简单介绍*****

一、Spring介绍
	spring并不局限于某一层.
	spring是对象的容器,帮我们"管理"项目中的所有对象

二、IOC 和 DI: 
	IOC :控制反转,将对象的创建权交给了 Spring. 
	
	DI :Dependency Injection 依赖注入.
		需要有IOC的环境,Spring创建这个类的过程中,Spring将类的依赖的属性设置进去. 

三、Beans之Bean元素配置
	bean创建方式(空参构造,静态方法，实例方法)
		目的:spring容器如何创建对象
		
	属性注入(set方法，构造方法)
		目的：spring在配置文件中初始化设置对象属性值
		<bean id="car" class="cn.itcast.spring.demo4.Car"> 
		  <property name="name" value=" 奇瑞 QQ"/>   
		  <property name="price" value="40000"/>  
		</bean>
四、使用注解代替xml配置
	配置方法：
		<context:component-scan base-package="com.itheima.spring.bean"/> 
	
	将对象注入到容器:
		@Component()――旧方法  
			三个衍生注解，功能相同
			@Service()  	service层
			@Controller()	web层
			@Repository()	dao层
			
	属性注入的注解：
		@Value  :用于注入普通类型. 
		@Autowired :自动装配: 
			* 默认按类型进行装配. 
			* 按名称注入: 
				* @Qualifier:强制使用名称注入. 
		@Resource 相当于: 
			* @Autowired 和@Qualifier 一起使用. 
	修改对象的作用范围：
		@Scope(scopeName="prototype/singleton")

五、AOP 面向切面编程
	aop思想：纵向重复 横向抽取
	
	目的：对程序进行增强,不修改源码的情况下.
		 * AOP 可以进行权限校验,日志记录,性能监控,事务控制. 
	
	应用：
		过滤器Filter： 解决乱码  
		动态代理InvocationHandler：管理事务  
		拦截器Interceptor：参数赋值
		
	springAop名词:
		join point: 连接点.所有可以织入通知的方法.
		point cut : 切入点.需要|已经织入通知的方法.
		advice:		需要增强的代码.
		weaving:	动词.将通知应用的切点的过程.
		target: 目标对象.
		proxy:	代理对象
		aspect: 切面. 切入点+通知
		














	